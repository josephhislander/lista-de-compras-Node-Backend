{"version":3,"sources":["helpers/fetch.js","types/types.js","action/listEvents.js","action/auth.js","hooks/useForm.js","components/auth/LoginPlace.js","components/auth/LoginWithGoogle.js","components/auth/RegisterPlace.js","routers/AuthRouter.js","components/auth/LoginScreen.js","components/list/List.js","components/list/Lists.js","components/list/ModalCost.js","components/list/ListItem.js","components/list/ListProducts.js","components/list/HandleFormProducts.js","components/list/NewList.js","components/list/InputsAddItem.js","components/list/ModalBudget.js","components/list/UseList.js","components/list/UpdateList.js","routers/ListRouter.js","components/ui/CreateNewList.js","components/ui/Navbar.js","components/list/ShoppingListScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/shoppingListReducer.js","reducers/rootReducer.js","store/store.js","ShoppingList.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","uid","list_id","product_id","types","moment","format","eventNewList","type","payload","lista","eventStarGetList","dispatch","a","resp","json","listas","eventGetList","console","log","eventStartDeleteList","id","getState","auth","estado","eventDeleteList","Swal","fire","icon","title","msg","text","eventStartUpdateList","activeList","activeTitle","productos","nombre","usuario","presupuesto","_id","eventUpdateList","list","eventStartNewActivelist","eventNewActiveList","eventStartGetProducts","eventStartNewProduct","name","amount","cantidad","producto","eventNewProduct","eventGetProducts","eventDeleteProduct","productId","filter","eventUpdateProductPrice","Product","cost","itbms","map","product","precio","impuesto","eventStartUpdateProductPrice","eventUpdateListBudge","Budget","eventStartCheckProduct","check","checked","eventCheckProduct","startLogin","correo","password","ok","setItem","Date","getTime","login","finishChecking","user","startLogout","clear","logout","useForm","initialState","useState","values","setValues","reset","nameValue","amountValue","Cost","handleInputChange","target","value","LoginPlace","useDispatch","Email","Password","formLoginValues","handleLoginInputChange","onSubmit","e","preventDefault","className","onChange","placeholder","LoginWithGoogle","clientId","buttonText","onSuccess","response","id_token","tokenId","then","catch","warn","onFailure","cookiePolicy","RegisterPlace","Name","Password1","Password2","formRegisterValues","password2","rol","errors","startRegister","AuthRouter","path","component","to","LoginScreen","List","date","fecha","push","useHistory","onClick","handleActiveList","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","Lists","useSelector","state","shoppingListReducer","lists","useEffect","customStyles","content","top","left","right","bottom","marginRight","transform","borderRadius","boxShadow","Modal","defaultStyles","overlay","backgroundColor","setAppElement","ModalCost","modalIsOpen","closeModal","setIsOpen","checkId","costValues","handleCostInputChange","isOpen","onRequestClose","style","contentLabel","shouldCloseOnOverlayClick","htmlFor","onFocus","defaultChecked","checkBox","document","getElementById","ListItem","products","location","handleCheckChange","pathname","disabled","eventStartDeleteProduct","ListProducts","HandleFormProducts","handleNewList","handleSubmit","activeProducts","setProducts","inputValues","handleNewItem","autocomplete","onBlur","focus","eventStartDeleteProducts","NewList","eventStartNewList","InputsAddItem","ModalBudget","budgetValues","handleBudgetInputChange","eventStartUpdateListBudge","UseList","totalCurrent","budget","remaining","setremaining","total","settotal","parseFloat","toFixed","rest","remainingBudget","totalPrice","reduce","accountant","UpdateList","ListRouter","exact","CreateNewList","Navbar","ShoppingListScreen","history","PrivateRoute","isAuthenticated","Component","props","PublicRoute","AppRouter","checking","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ShoppingList","ReactDOM","render"],"mappings":"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","file":"static/js/main.94443a05.chunk.js","sourcesContent":["\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data = false, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n \r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token,\r\n                'user-id' : data.uid,\r\n                'list-id': data.list_id\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token,\r\n                'user-id' : data.uid,\r\n                'list-id': data.list_id,\r\n                'producto-id': data.product_id\r\n            },\r\n            body: JSON.stringify( data )\r\n           \r\n        } );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","\r\nexport const types = {\r\n\r\n    authLogin: '[auth] Login',\r\n    authLogout: '[auth] Logout',\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n\r\n    eventNewList: '[event] New List',\r\n    eventGetList: '[event] Get Lists',\r\n    eventDeleteList: '[event] Delete List',\r\n    eventUpdateList: '[event] Update List',\r\n    eventNewActiveList: '[event] New Active List',\r\n    eventUpdateListBudge: '[event] Update Product Budge',\r\n\r\n    eventNewProduct: '[event] New Product',\r\n    eventGetProducts: '[event] Get Products',\r\n    eventDeleteProduct: '[event] Delete Product',\r\n    eventDeleteProducts: '[event] Delete Products',\r\n    eventNewActiveProduct: '[event] New Active Product',\r\n    eventUpdateProductPrice: '[event] Update Product Price',\r\n    eventCheckProduct: '[event] Check Product',\r\n\r\n    eventLogout: '[event] Logout',\r\n\r\n}\r\n\r\n","import { types } from \"../types/types\"\r\nimport moment from 'moment';\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport Swal from \"sweetalert2\";\r\nmoment().format();\r\n\r\n    export const eventStartNewList = (title = 'noName', user) => {\r\n\r\n    return async(dispatch) => {\r\n        try {\r\n            const data = {nombre: title,\r\n                           uid: user,\r\n                           presupuesto: 1\r\n                        \r\n                            };\r\n        \r\n            const resp = await fetchConToken('listas',data , 'POST');\r\n            const body = await resp.json();\r\n\r\n            console.log(body);\r\n\r\n            dispatch(eventNewList(body))\r\n\r\n            Swal.fire(\r\n            'Save!',\r\n            'Your list has been created.',\r\n            'success'\r\n          )\r\n        } catch (error) {\r\n            console.log(error + ' algo paso con el fetch')\r\n            // const resp2 = await fetchConToken('')\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventNewList = (body) => ({\r\n    type: types.eventNewList,\r\n    payload:  body.lista  \r\n})\r\n\r\nexport const eventStarGetList = (uid) => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        try {  \r\n            const data = {\r\n                           uid\r\n                            };\r\n        \r\n            const resp = await fetchConToken('listas',data, 'GET' );\r\n            const body = await resp.json();\r\n            const listas = body.listas;\r\n            dispatch(eventGetList(listas));\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n export const eventGetList = (listas) => ({\r\n    type: types.eventGetList,\r\n    payload: listas\r\n})\r\n\r\n\r\nexport const eventStartDeleteList = (id) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid} = getState().auth;\r\n        try {\r\n            const resp = await fetchConToken(`listas/${ id }`, {\"uid\": uid}, 'DELETE' );\r\n            const body = await resp.json();\r\n            if ( body.estado === false ) {\r\n                dispatch( eventDeleteList(id) );\r\n                dispatch(eventStarGetList(uid));\r\n            } else {\r\n                Swal.fire({icon:'error', title: body.msg, text:'error fetch'});\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const eventDeleteList = (id) => ({\r\n    type: types.eventDeleteList,\r\n    payload: id\r\n})\r\n\r\n\r\nexport const eventStartUpdateList = (activeList, activeTitle, productos) => {\r\n  \r\n    const data = {nombre: activeTitle, uid: activeList.usuario, presupuesto : 0};\r\n\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`listas/${activeList._id}`, data, 'PUT')\r\n            const body = await resp.json();\r\n\r\n            console.log(body);\r\n            dispatch(eventUpdateList(body.lista, productos))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventUpdateList = (lista,productos) => ({\r\n    \r\n    type: types.eventUpdateList,\r\n    payload:{ \r\n        id: lista._id,\r\n        list: {\r\n            ...lista,\r\n            productos\r\n    }}\r\n})\r\n\r\n\r\nexport const eventStartNewActivelist = (lista) => {\r\n\r\n    return async(dispatch) => {\r\n        try {\r\n            dispatch(eventNewActiveList(lista))\r\n            const productos = await dispatch(eventStartGetProducts(lista))\r\n            console.log(productos)\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const eventNewActiveList = ( list) => ({\r\n    type: types.eventNewActiveList,\r\n    payload: list\r\n})\r\n\r\n\r\nexport const eventStartNewProduct = (name, activeList, amount) => {\r\n\r\n    const data = {  \r\n        nombre: name,\r\n        cantidad: amount,\r\n        lista: activeList\r\n        };\r\n\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken('productos',data , 'POST');\r\n            const body = await resp.json();\r\n            const producto = body.producto;\r\n            dispatch(eventNewProduct(producto, activeList))\r\n        } catch (error) {\r\n            console.log(error)\r\n            // const resp2 = await fetchConToken('')\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventNewProduct = (producto, activeList) => ({\r\n    type: types.eventNewProduct,\r\n    payload: {\r\n        activeList,\r\n        producto\r\n            }\r\n})\r\n\r\nexport const eventStartGetProducts = ( listas) => {\r\n\r\n    return async(dispatch) => { \r\n                                try {\r\n            \r\n                    const data =    {\r\n                        'uid': listas.usuario,\r\n                        'list_id': listas._id,\r\n                        \r\n                    };\r\n                \r\n                    const resp = await fetchConToken('productos',data, 'GET' );\r\n                    const body = await resp.json();\r\n                    // console.log(body.productos);\r\n                    const productos = body.productos;\r\n                    // return productos;\r\n                    // console.log(productos);\r\n                    dispatch(eventGetProducts(listas, productos))\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n        }\r\n\r\n    } \r\n    \r\n\r\nexport const eventGetProducts = (activeList, productos) => ({\r\n    type: types.eventGetProducts,\r\n    payload: {\r\n        id: activeList._id,\r\n        list: {...activeList,\r\n                    productos   \r\n                }}\r\n\r\n})\r\n\r\n\r\nexport const eventStartDeleteProduct = ( productId, activeList) => {\r\n   \r\n\r\n    console.log(activeList, productId)\r\n    const data = {\r\n        'uid': activeList.usuario,\r\n        'product_id': productId, \r\n    }\r\n\r\n    return async(dispatch) => {\r\n       \r\n        \r\n            try {\r\n                const resp = await fetchConToken(`productos/product`, data, 'DELETE' );\r\n                const body = await resp.json();\r\n                console.log(body);\r\n                // if ( body.msg === 'Eliminados') {\r\n                //     console.log('Eliminados')\r\n                //     // dispatch( eventNewActiveList(body))\r\n                    dispatch( eventDeleteProduct(productId, activeList) );\r\n\r\n                // } else {\r\n                //     Swal.fire({icon:'error', title: body.msg, text:'error  Test'});\r\n                // }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const eventDeleteProduct = (productId, activeList) => ({\r\n    type: types.eventDeleteProduct,\r\n    payload:  {\r\n        id: activeList._id,\r\n        list: {...activeList,\r\n                    productos: activeList.productos.filter( producto => producto._id !== productId)     \r\n                }}\r\n})\r\n\r\n\r\n\r\nexport const eventStartDeleteProducts = ({_id, usuario}) => {\r\n\r\n    console.log(_id, usuario)\r\n    const data = {\r\n        'uid': usuario,\r\n        'list_id': _id, \r\n    }\r\n\r\n    return async(dispatch) => {\r\n       \r\n        \r\n            try {\r\n                const resp = await fetchConToken(`productos`, data, 'DELETE' );\r\n                const body = await resp.json();\r\n                console.log(body);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventNewActiveProduct = (activeList, Product) => ({\r\n    type: types.eventNewActiveProduct,\r\n    payload: {\r\n        id: activeList.id,\r\n        list: {...activeList,\r\n                activeProduct: Product\r\n                }\r\n            }\r\n})\r\n\r\nexport const eventUpdateProductPrice = (activeList, Product, cost, itbms) => ({\r\n    type: types.eventUpdateProductPrice,\r\n    payload: {\r\n        id: activeList._id,\r\n        list: {...activeList,\r\n                    productos: activeList.productos.map( product => (product._id === Product._id)\r\n                    ? {...Product,\r\n                        precio: cost,\r\n                        impuesto: itbms\r\n                    }\r\n                    :product\r\n                    )\r\n                }}\r\n                \r\n})\r\n\r\n\r\nexport const eventStartUpdateProductPrice = (activeList, Product, cost =0, itbms= 0) => {\r\n\r\n    const data = { uid: activeList.usuario, precio: cost, impuesto: itbms};\r\n\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`productos/${Product._id}`, data, 'PUT')\r\n            const body = await resp.json();\r\n\r\n            console.log(body);\r\n            dispatch(eventUpdateProductPrice(activeList, Product, cost, itbms  ))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }  \r\n}\r\n\r\n\r\nexport const eventStartUpdateListBudge = (activeList, Budget) => {\r\n    \r\n    \r\n    const data = {presupuesto: Budget, uid: activeList.usuario, nombre: activeList.nombre};\r\n    console.log(data);\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`listas/${activeList._id}`, data, 'PUT')\r\n\r\n            const body = await resp.json();\r\n            console.log(body);\r\n\r\n            dispatch(eventUpdateListBudge(activeList, Budget));\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const eventUpdateListBudge = (activeList, Budget) => ({\r\n    type: types.eventUpdateListBudge,\r\n    payload: {\r\n        id: activeList.id,\r\n        list: { ...activeList,\r\n                presupuesto: Budget\r\n        }\r\n    }\r\n\r\n})\r\n\r\n\r\nexport const eventStartCheckProduct = (activeList,  Product, check = false) => {\r\n\r\n\r\n    const data = { uid: activeList.usuario, checked: check};\r\n\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`productos/${Product._id}`, data, 'PUT')\r\n            const body = await resp.json();\r\n\r\n            console.log(body);\r\n            dispatch(eventCheckProduct(activeList, Product, check   ))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }   \r\n}\r\n\r\n\r\nexport const eventCheckProduct = (activeList, Product, check) => ({\r\n    type: types.eventCheckProduct,\r\n    payload: {\r\n        id: activeList._id,\r\n        list: {...activeList,\r\n                    productos: activeList.productos.map( product => (product._id === Product._id)\r\n                    ? {...Product,\r\n                        checked: check\r\n                    }\r\n                    :product\r\n                    )\r\n                }}\r\n})\r\n\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})\r\n\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./listEvents\";\r\n\r\n\r\nexport const startLogin = ( correo, password) => {\r\n\r\n    return async(dispatch) => {\r\n        \r\n        const resp = await fetchSinToken('auth/login', {correo, password}, 'POST');\r\n        const body = await resp.json();\r\n        // console.log(body);\r\n\r\n        if( body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.id,\r\n                name: body.usuario.nombre\r\n            }))\r\n\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const startRegister = ( nombre, correo, password, password2, rol = 'USER_ROLE') => {\r\n\r\n    return async(dispatch) => {\r\n        \r\n        const resp = await fetchSinToken('usuarios', {nombre,correo, password, password2, rol}, 'POST');\r\n        const body = await resp.json();\r\n        \r\n        if( body.msg === 'Creado') {\r\n            dispatch(startLogin(correo, password));\r\n        } else {\r\n            Swal.fire('Error', body.errors[0].msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n        // console.log(body);\r\n \r\n\r\n        if( body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.id,\r\n                name: body.name\r\n            }))\r\n\r\n        } else {\r\n            dispatch(finishChecking());\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const finishChecking = () => ({ type: types.authCheckingFinish});\r\n\r\n\r\nexport const login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n        dispatch(eventLogout())\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.authLogout\r\n})\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n\r\n    const reset = (nameValue = '', amountValue = 1 , Cost = '') => {\r\n     \r\n        setValues( {\r\n            ...values,\r\n\r\n            nameValue,\r\n            amountValue,\r\n            Cost\r\n        });\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin } from '../../action/auth';\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginPlace = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n            Email: '',\r\n            Password: ''\r\n    })\r\n\r\n    const{Email, Password} = formLoginValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(Email, Password));\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleLogin} className=\"animate__animated animate__fadeIn\">\r\n                  <div className=\"form-group mt-5 i-email\">\r\n                            <input \r\n                                className=\"form-control fs-4 \"\r\n                                name=\"Email\"\r\n                                onChange= {handleLoginInputChange}\r\n                                placeholder={\"Email\"}\r\n                                type=\"text\"\r\n                                value={Email}\r\n                            />\r\n                  </div>\r\n \r\n                  <div className=\"form-group mt-4\">\r\n                            <input \r\n                                className=\"form-control fs-4\"\r\n                                name=\"Password\"\r\n                                onChange= {handleLoginInputChange}\r\n                                placeholder=\"Password\"\r\n                                type=\"password\"\r\n                                value={Password}\r\n                            />\r\n                  </div>\r\n                  <div className=\"form-group d-grid gap-2 col-6 mx-auto mt-5 \">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btn btn-success fs-4 \"\r\n                                value=\"LogIn\" \r\n                            />\r\n                  </div>\r\n        </form>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../../action/auth\";\r\n\r\n\r\nexport const LoginWithGoogle = () => {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  const dispatch = useDispatch();\r\n\r\n  const failure = () => {\r\n      console.log('Failure')\r\n  }\r\n\r\n\r\n  function handleCredentialResponse(response) {\r\n    const body = { id_token: response.tokenId };\r\n\r\n    fetch( baseUrl+\"/auth/google\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((resp) => {\r\n        localStorage.setItem(\"email\", resp.usuario.correo);\r\n        localStorage.setItem('token', resp.token);\r\n        localStorage.setItem('token-init-date', new Date().getTime());\r\n        dispatch(\r\n          login({\r\n            uid: resp.usuario.uid,\r\n            name: resp.usuario.nombre,\r\n          })\r\n        );\r\n      })\r\n      .catch(console.warn);\r\n  }\r\n\r\n  return (\r\n    <div className=\" mt-5 text-center auth__social-networks \">\r\n      <GoogleLogin\r\n        clientId=\"153363051251-ns1m9qcf2e3qrm2j0ho9ipcq18ta6eah.apps.googleusercontent.com\"\r\n        buttonText=\"Login\"\r\n        onSuccess={handleCredentialResponse}\r\n        onFailure={failure}\r\n        cookiePolicy={\"single_host_origin\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startRegister } from '../../action/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const RegisterPlace = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formRegisterValues, handleLoginInputChange] =useForm({\r\n        Name: '',\r\n        Email: '',\r\n        Password1: '',\r\n        Password2: ''\r\n    })\r\n\r\n    const {Name, Email, Password1, Password2} = formRegisterValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(Password1 !== Password2) {\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales');\r\n        }\r\n\r\n        dispatch(startRegister(Name,Email,Password1,Password2))\r\n    }\r\n    \r\n    return (\r\n        <div >\r\n            <form onSubmit={handleRegister} className=\"animate__animated animate__fadeIn\">\r\n                  \r\n                  <div className=\"form-group mt-5 \">\r\n                            <input \r\n                                className=\"form-control fs-4 \"\r\n                                name=\"Name\"\r\n                                onChange= {handleLoginInputChange}\r\n                                placeholder={\"Name\"}\r\n                                type=\"text\"\r\n                                value={Name}\r\n                            />\r\n                  </div>\r\n\r\n                  <div className=\"form-group mt-4 i-email\">\r\n                            <input \r\n                                className=\"form-control fs-4 \"\r\n                                name=\"Email\"\r\n                                onChange= {handleLoginInputChange}\r\n                                placeholder={\"Email\"}\r\n                                type=\"text\"\r\n                                value={Email}\r\n                            />\r\n                  </div>\r\n \r\n                  <div className=\"form-group mt-4\">\r\n                            <input \r\n                                className=\"form-control fs-4\"\r\n                                name=\"Password1\"\r\n                                onChange= {handleLoginInputChange}\r\n                                placeholder=\"Password\"\r\n                                type=\"password\"\r\n                                value={Password1}\r\n                            />\r\n                  </div>\r\n\r\n                  <div className=\"form-group mt-4\">\r\n                            <input \r\n                                className=\"form-control fs-4\"\r\n                                name=\"Password2\"\r\n                                onChange= {handleLoginInputChange}\r\n                                placeholder=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                value={Password2}\r\n                            />\r\n                  </div>\r\n\r\n                  <div className=\"form-group d-grid gap-2 col-6 mx-auto mt-5\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btn btn-success fs-4\"\r\n                                value=\"Register\" \r\n                            />\r\n                  </div>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Switch,\r\n    Redirect,\r\n    Route\r\n  } from \"react-router-dom\";\r\n\r\nimport { LoginPlace } from '../components/auth/LoginPlace'\r\nimport { LoginWithGoogle } from '../components/auth/LoginWithGoogle'\r\nimport { RegisterPlace } from '../components/auth/RegisterPlace'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n       \r\n            <div>\r\n                <Switch>\r\n                    <Route \r\n                        path='/auth/login'\r\n                        component={LoginPlace}\r\n                    />\r\n\r\n                    <Route \r\n                        path='/auth/loginG'\r\n                        component={LoginWithGoogle}\r\n                    />\r\n\r\n                    <Route \r\n                        path='/auth/register'\r\n                        component={RegisterPlace}\r\n                    />\r\n                \r\n                    <Redirect to='/auth/login' />\r\n\r\n                </Switch>\r\n            </div>\r\n       \r\n                \r\n        \r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"animate.css\";\r\nimport { AuthRouter } from '../../routers/AuthRouter';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    return (\r\n        <div className=\"login-container \">\r\n          <div className=\"transparencia d-flex justify-content-center align-items-center\">\r\n            <div className=\"form-container\">\r\n\r\n                  <div className=\"text-center\" >\r\n                    <i className=\"bi bi-cart-check \"></i>\r\n                    <span className='font-brand navbar-brand text-light fs-1 m-4'>\r\n                        Shopping List\r\n                    </span>\r\n                  </div>\r\n                  \r\n\r\n                  <nav>\r\n                    <div className=\"fs-3\">\r\n\r\n                      <Link\r\n                      className=\"button\"  type=\"button\" \r\n                      to=\"/auth/login\">\r\n                      LogIn\r\n                      </Link>\r\n                  \r\n                      <Link\r\n                      className=\"button\"  type=\"button\" \r\n                      to=\"/auth/loginG\">\r\n                      LogIn with <span className=\"google-blue\">G</span><span className=\"google-red\">o</span><span className=\"google-yellow\">o</span><span className=\"google-blue\">g</span><span className=\"google-green\">l</span><span className=\"google-red\">e</span>\r\n                      </Link>\r\n\r\n                      <Link\r\n                      className=\"button\" type=\"button\"  to=\"/auth/register\" >\r\n                      Register\r\n                      </Link>\r\n\r\n                    </div>\r\n                  </nav> \r\n\r\n                  <div className=\" router-container\" >\r\n                      <AuthRouter />\r\n                  </div>\r\n    \r\n            </div>\r\n          </div>\r\n        </div>\r\n      \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch} from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport {  eventStartDeleteList, eventStartNewActivelist } from '../../action/listEvents';\r\nimport Swal from 'sweetalert2';\r\nimport moment from 'moment';\r\n\r\nexport const List = (list) => {\r\n\r\n    const date = moment(list.fecha).format(\"D/MM/YYYY\")\r\n    const { push} = useHistory();\r\n    const dispatch = useDispatch();\r\n \r\n\r\n    const handleDelete = () => {\r\n\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#198754;',\r\n            cancelButtonColor: '#db3236',\r\n            confirmButtonText: 'Yes, delete it!'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                dispatch( eventStartDeleteList(list._id));\r\n\r\n              Swal.fire(\r\n                'Deleted!',\r\n                'Your product has been deleted.',\r\n                'success'\r\n              )\r\n            }\r\n          })\r\n       \r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        dispatch( eventStartNewActivelist(list))\r\n        push('/list/updateList')\r\n    }\r\n\r\n\r\n    const handleActiveList = (list) => {\r\n      dispatch( eventStartNewActivelist(list))\r\n        // dispatch(eventNewActiveList(list));\r\n        push('list/useList')\r\n    }\r\n\r\n    return (\r\n        \r\n             <li className='list-item '>\r\n                      <button\r\n                      className='list-group-item list-group-item-action list-group-item-success rounded d-flex justify-content-between'\r\n                      type=\"button\"\r\n                      onClick={ () => handleActiveList(list)}    \r\n                      >\r\n                      {list.nombre}\r\n                      <span> {date}</span>\r\n                      </button>\r\n                   \r\n                      <i className=\"bi bi-pencil-square fs-3 text-warning pt-2  pl-2\"\r\n                        onClick={handleUpdate}\r\n                      ></i>\r\n                      <i className=\"bi bi-trash fs-3 text-danger pt-2 pl-2\"\r\n                         onClick={handleDelete}\r\n                      ></i>\r\n             </li>\r\n        \r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux';\r\nimport { eventStarGetList} from '../../action/listEvents';\r\nimport { List } from './List';\r\n\r\nexport const Lists = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {uid} = useSelector( state => state.auth );\r\n    const {lists, activeList} = useSelector( state => state.shoppingListReducer );\r\n    \r\n    useEffect( () => {\r\n         dispatch(eventStarGetList(uid,lists,activeList));\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <ul className=\"list-group p-3\">\r\n            {\r\n                lists.map( list => (\r\n                    <List key={list._id} {...list} />\r\n                ))\r\n            } \r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { eventStartCheckProduct, eventStartUpdateProductPrice} from '../../action/listEvents';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      borderRadius: '1rem',\r\n      boxShadow: '1rem',\r\n    },\r\n  };\r\n  \r\n  Modal.defaultStyles.overlay.backgroundColor = '#000000d5';\r\n  \r\n  Modal.setAppElement('#root');\r\n  \r\n\r\nexport const ModalCost = ({modalIsOpen,setIsOpen, closeModal, Product, checkId }) => {\r\n\r\n    const {activeList} = useSelector( state => state.shoppingListReducer );\r\n    const dispatch = useDispatch();\r\n    const [costValues, handleCostInputChange, reset] = useForm({\r\n        Cost: 0,\r\n        itbms: 0.07,\r\n    });\r\n\r\n    const {Cost, itbms} = costValues;\r\n    \r\n    const handleCostInputFocus = () => {\r\n      console.log('hola mundo')\r\n      reset( Cost, '')\r\n    }\r\n\r\n    const handleSavePrice = () => {\r\n      dispatch(eventStartUpdateProductPrice(activeList, Product, Cost, itbms))\r\n      closeModal()\r\n    }\r\n\r\n    const handleBack = () => {\r\n      let checkBox = document.getElementById(checkId);\r\n      dispatch( eventStartCheckProduct(activeList, Product));\r\n      checkBox.checked = false;\r\n      closeModal()\r\n    }\r\n\r\n    return (\r\n              \r\n      <Modal\r\n      isOpen={modalIsOpen}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      contentLabel=\"Example Modal\"\r\n      shouldCloseOnOverlayClick={false}\r\n    >\r\n \r\n          <div className=\"row g-3 d-flex justify-content-around  mb-3\">\r\n                <div className=\"col-auto d-flex align-self-center fs-1\">\r\n                  <label htmlFor=''>Cost</label>\r\n                </div>\r\n                <div className=\"col-auto \">\r\n                  <input    \r\n                        className=\"form-control fs-3\" \r\n                        name='Cost' \r\n                        onChange={handleCostInputChange}\r\n                        onFocus= {handleCostInputFocus}\r\n                        placeholder='$'\r\n                        type='text'\r\n                        value={Cost}\r\n\r\n                        />\r\n                </div>\r\n          </div>\r\n        <div>  \r\n  \r\n        <div className='row  mb-3'>\r\n              <form className='d-flex justify-content-around fs-3'>\r\n                  <span >Itbms: </span>\r\n\r\n                  <span >\r\n                    <label className='form-check-label mr-4 ml-4' htmlFor='7%' >7%</label>\r\n                    <input \r\n                            className='form-check-input' \r\n                            id='7%' \r\n                            name='itbms'\r\n                            onChange={handleCostInputChange} \r\n                            type='radio' \r\n                            value={0.07}\r\n                            defaultChecked\r\n                            />\r\n                  </span>\r\n          \r\n                 \r\n                   <span >\r\n                      <label className='form-check-label mr-4 ml-4' htmlFor='10%' >10%</label>\r\n                      <input \r\n                            className='form-check-input' \r\n                            id='10%' \r\n                            name='itbms'\r\n                            onChange={handleCostInputChange} \r\n                            type='radio' \r\n                            value={0.10} />\r\n                    </span>                     \r\n\r\n                    <span >          \r\n                      <label className='form-check-label mr-4 ml-4' htmlFor='exento'   >Exento</label>\r\n                      <input \r\n                            className='form-check-input' \r\n                            id='exento' \r\n                            name='itbms'\r\n                            onChange={handleCostInputChange} \r\n                            type='radio' \r\n                            value={0} />\r\n                   </span >\r\n                     \r\n              </form>\r\n              </div>\r\n        </div>\r\n\r\n        <div className=\"footer d-flex justify-content-center\">\r\n            <button className='btn btn-success fs-1 mr-2'\r\n            onClick={handleBack}\r\n           >\r\n            Back\r\n           </button>\r\n\r\n           <button className='btn btn-success fs-1'\r\n            onClick={handleSavePrice}\r\n            id=\"cancelBtn\"\r\n           >\r\n            Save  \r\n           </button>\r\n\r\n          \r\n        </div>\r\n    </Modal>\r\n\r\n    )\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport Swal from 'sweetalert2';\r\nimport {  eventStartDeleteProduct, eventStartCheckProduct, eventStartUpdateProductPrice } from '../../action/listEvents';\r\nimport { ModalCost } from './ModalCost';\r\n\r\n\r\n\r\nexport const ListItem = ({nombre, _id, products, cantidad, Product}) => {\r\n\r\n    const [modalIsOpen, setIsOpen] = useState();\r\n    const {activeList} = useSelector( state => state.shoppingListReducer);\r\n    const dispatch = useDispatch()\r\n    const {location} = useHistory();\r\n    const checkId = `flexCheck${_id}`;\r\n\r\n    const handleDeleteItem = () => { \r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#198754;',\r\n            cancelButtonColor: '#db3236',\r\n            confirmButtonText: 'Yes, delete it!'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              dispatch( eventStartDeleteProduct(_id, activeList ))\r\n              Swal.fire(\r\n                'Deleted!',\r\n                'Your product has been deleted.',\r\n                'success'\r\n              )\r\n            }\r\n          })\r\n\r\n    }\r\n\r\n    const handleCheckChange =  async(e) => {\r\n      const check = e.target.checked;\r\n      if(check) {\r\n        setIsOpen(true);\r\n        dispatch( eventStartCheckProduct(activeList, Product, check));\r\n        console.log('check en true')\r\n      } \r\n      \r\n      if(check === false){\r\n        await dispatch( eventStartCheckProduct(activeList, Product, check));\r\n        dispatch(eventStartUpdateProductPrice(activeList, Product));\r\n        console.log('check en false')\r\n      }\r\n    }\r\n\r\n    const closeModal = () => {\r\n      setIsOpen(false);\r\n    }\r\n  \r\n\r\n    return (\r\n        <div className=\" list-group-item-action list-group-item-success form-check d-flex justify-content-between pl-5 pr-3 \" >        \r\n                { (location.pathname === \"/list/useList\")\r\n                    ? \r\n                    (Product.checked) ?\r\n                    <input className=\"form-check-input check \" type=\"checkbox\" value=\"Hola\" id={`flexCheck${_id}`}  onClick={handleCheckChange} defaultChecked />\r\n                    \r\n                            : <input className=\"form-check-input check \" type=\"checkbox\" value=\"Hola\" id={`flexCheck${_id}`}  onClick={handleCheckChange} />\r\n\r\n                    :<input className=\"form-check-input check \" type=\"checkbox\" value=\"\" id={`flexCheck${_id}`} disabled />\r\n                    } \r\n                \r\n            <label className=' ml-3' htmlFor={`flexCheck${_id}`}  >\r\n                {nombre}  {\r\n                    (cantidad > 1)\r\n                    && 'x' + cantidad\r\n                }\r\n                \r\n            </label>\r\n            <div>\r\n                <i className=\"bi bi-trash fs-3 text-danger  float-end\"\r\n                    onClick={handleDeleteItem}\r\n                    type='button'> </i>\r\n            </div>  \r\n\r\n            <ModalCost \r\n\r\n                      closeModal={closeModal}\r\n                      modalIsOpen={modalIsOpen}\r\n                      Product={Product}\r\n                      setIsOpen={setIsOpen}\r\n                      checkId = {checkId}\r\n            />      \r\n    </div> \r\n    )\r\n}\r\n\r\nListItem.propTypes = {\r\n    nombre: PropTypes.string.isRequired,\r\n    // id: PropTypes.any.isRequired,\r\n    products: PropTypes.array.isRequired,\r\n}\r\n\r\n","\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport {ListItem} from './ListItem';\r\n\r\nexport const ListProducts = () => {\r\n\r\n    const {productos} = useSelector( state => state.shoppingListReducer.activeList );\r\n\r\n    return (\r\n        <div className='list-check-container min-h m-0 border-bottom-0'>\r\n            {   \r\n                (productos) &&\r\n                productos.map( product => (\r\n                <ListItem key={product._id}\r\n                            {...product}\r\n                            Product={product}  \r\n                            products={productos}\r\n                              />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import PropTypes from 'prop-types';\r\nimport React, {useState, useEffect } from 'react';\r\nimport Swal from 'sweetalert2'\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {useForm} from '../../hooks/useForm';\r\nimport { eventStartDeleteList, eventStartDeleteProducts,  eventStartNewProduct } from '../../action/listEvents';\r\nimport { ListProducts } from './ListProducts';\r\n\r\nmoment().format();\r\n\r\nexport const HandleFormProducts = ({handleNewList = false, handleSubmit, activeTitle = 'List title', activeProducts = []}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {uid} = useSelector( state => state.auth );\r\n    const {activeList} = useSelector( state => state.shoppingListReducer );\r\n    const { push, location} = useHistory()\r\n    const [products, setProducts] = useState([])\r\n    const  [inputValues, handleInputChange, reset] = useForm({\r\n        title: '',\r\n        nameValue: '',\r\n        amountValue: 1\r\n    });\r\n    const {nameValue, amountValue, title} = inputValues;\r\n\r\n\r\n    useEffect(() => {\r\n            (location.pathname === \"/list/newList\")&&    \r\n            handleNewList(uid)\r\n    }, [])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    const handleNewItem = async() => {\r\n\r\n        if( nameValue === '') {\r\n            return Swal.fire({\r\n                title: 'The product name cannot be empty',\r\n                icon: 'warning'\r\n              })\r\n        }\r\n      \r\n        await dispatch(eventStartNewProduct(nameValue, activeList,amountValue));\r\n\r\n        reset();\r\n\r\n    }\r\n\r\n    const handleBack = () => {\r\n\r\n        if(location.pathname === \"/list/newList\"){\r\n              Swal.fire({\r\n                title: 'Are you sure?',\r\n                text: \"do you want delete this list?\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#81DFDD',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, delete it!'\r\n              }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    dispatch(eventStartDeleteList(activeList._id));\r\n                    dispatch(eventStartDeleteProducts(activeList));\r\n                  Swal.fire(\r\n                    'Deleted!',\r\n                    'Your file has been deleted.',\r\n                    'success'\r\n                  )\r\n                  push('/list')\r\n                }\r\n              })\r\n        } else {\r\n            push('/list')\r\n        }\r\n        \r\n    }\r\n\r\n    const handleSave = ({target}) => {\r\n        target.focus();\r\n\r\n        if(title === ''){\r\n            return Swal.fire({\r\n                title: 'The title cannot be empty',\r\n                icon: 'warning'\r\n              })\r\n        }\r\n\r\n        console.log(title);\r\n        handleSubmit( activeList, title, uid,products);\r\n    }\r\n\r\n    const handleInputAmountFocus = () => {\r\n        reset( nameValue, '')\r\n    }\r\n\r\n    const  handleInputAmountBlur = () => {\r\n        if ( amountValue === '') {\r\n            \r\n            reset( nameValue)\r\n        } \r\n    }\r\n\r\n    return (\r\n             <form className='m-2' autocomplete=\"off\">\r\n                    <div className='form-group '>\r\n                        <input\r\n                            className='form-control fs-4 border-success text-success'\r\n                            name='title'\r\n                            onChange={handleInputChange}\r\n                            type='text'\r\n                            placeholder= 'Title'\r\n                            value={title}\r\n                        ></input>\r\n                    </div>\r\n\r\n                    <ListProducts \r\n                        products={products}\r\n                        setProducts={setProducts}\r\n                    />\r\n\r\n                    <div className='form-group mt-3 mr-3 d-inline-block input-w'>\r\n                        <input\r\n                            className='form-control fs-4 border-success  text-success'\r\n                            name='nameValue'\r\n                            onChange={handleInputChange}\r\n                            placeholder='Add product'\r\n                            type='text'\r\n                            value={nameValue}\r\n                            title='Add product'>\r\n                        </input>\r\n                    </div>\r\n\r\n                    <div className='form-group m-3 d-inline-block input-w'>\r\n                        <input\r\n                            className='form-control fs-4 border-success  text-success'\r\n                            name='amountValue'\r\n                            onChange={handleInputChange}\r\n                            onBlur= { handleInputAmountBlur}\r\n                            onFocus= {handleInputAmountFocus}\r\n                            placeholder='Amount'\r\n                            type='text'\r\n                            value={amountValue}\r\n                            title='Add product'>\r\n                        </input>\r\n                    </div>\r\n\r\n                    <button\r\n                            className='btn btn-success fs-4 '\r\n                            type='button'\r\n                            onClick={handleNewItem}\r\n                            >\r\n                            <i className=\"bi bi-plus-lg text-light \"></i>\r\n                            \r\n                    </button>\r\n\r\n                    <button\r\n                            className='btn btn-success fs-4 mt-3  float-end'\r\n                            type='button'\r\n                            onClick={ handleSave}\r\n                            >\r\n                        Save \r\n                    </button>\r\n\r\n                    <button\r\n                            className='btn btn-success fs-4 mt-3 mr-3 float-end'\r\n                            type='button'\r\n                            onClick={handleBack}\r\n                            >\r\n                        Back\r\n                    </button>\r\n                </form>\r\n    )\r\n}\r\n\r\nHandleFormProducts.propTypes = {\r\n    // handleSubmit: PropTypes.func.isRequired,\r\n    activeTitle: PropTypes.string,\r\n    activeProducts: PropTypes.array\r\n}\r\n\r\n","\r\nimport { useHistory } from 'react-router';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\nimport { useDispatch} from 'react-redux';\r\n// import {  eventNewList, eventStartNewList, eventStartNewProduct } from '../../action/listEvents';\r\nimport {eventStartNewList, eventStartUpdateList} from '../../action/listEvents';\r\n\r\nimport { HandleFormProducts } from './HandleFormProducts';\r\n// import { useEffect } from 'react';\r\n\r\n\r\nexport const NewList = () => {\r\n\r\n    const { push } = useHistory()\r\n    const dispatch = useDispatch();\r\n\r\n     const handleNewList = (uid) => {\r\n        dispatch(eventStartNewList( 'noName',uid));\r\n     }\r\n\r\n     const handleSubmit = (activeList , title, uid,productos) => {\r\n        \r\n        dispatch(eventStartUpdateList(activeList, title, productos))\r\n        push(\"/list\")\r\n     }\r\n       \r\n    return (\r\n       <>\r\n            <HandleFormProducts \r\n                handleNewList= {handleNewList}\r\n                handleSubmit={handleSubmit}\r\n            />\r\n       </>\r\n    )\r\n    }\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { eventStartNewProduct } from '../../action/listEvents';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const InputsAddItem = () => {\r\n\r\n    const {activeList} = useSelector( state => state.shoppingListReducer );\r\n    const dispatch = useDispatch();\r\n\r\n    const  [inputValues, handleInputChange, reset] = useForm({\r\n        title: 'activeTitle',\r\n        nameValue: '',\r\n        amountValue: 1\r\n    });\r\n    const {nameValue, amountValue} = inputValues;\r\n\r\n    const handleInputAmountFocus = () => {\r\n        reset( nameValue, '')\r\n    }\r\n\r\n    const  handleInputAmountBlur = () => {\r\n        if ( amountValue === '') {\r\n            \r\n            reset( nameValue, 1)\r\n        } \r\n    }\r\n\r\n    const handleNewItem = async() => {\r\n\r\n        if( nameValue === '') {\r\n            return Swal.fire({\r\n                title: 'The product name cannot be empty',\r\n                icon: 'warning'\r\n              })\r\n        }\r\n\r\n        // console.log('hola mundo');\r\n        // console.log(nameValue, activeList._id,amount);\r\n        await dispatch(eventStartNewProduct(nameValue, activeList,amountValue));\r\n\r\n\r\n        // dispatch( eventNewProduct(activeList, nameValue, amountValue))\r\n\r\n        reset();\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n             <div className='form-group mt-3 mr-3 d-inline-block input-w'>\r\n                        <input\r\n                            className='form-control fs-4 border-success  text-success'\r\n                            name='nameValue'\r\n                            onChange={handleInputChange}\r\n                            placeholder='Add product'\r\n                            type='text'\r\n                            value={nameValue}\r\n                            title='Add product'\r\n                            autocomplete=\"off\">\r\n                        </input>\r\n                    </div>\r\n\r\n                    <div className='form-group m-3 d-inline-block input-w'>\r\n                        <input\r\n                            className='form-control fs-4 border-success  text-success'\r\n                            name='amountValue'\r\n                            onChange={handleInputChange}\r\n                            onBlur= { handleInputAmountBlur}\r\n                            onFocus= {handleInputAmountFocus}\r\n                            placeholder='Amount'\r\n                            type='text'\r\n                            value={amountValue}\r\n                            title='Add product'\r\n                            autocomplete=\"off\">\r\n                        </input>\r\n                    </div>\r\n\r\n                    <button\r\n                            className='btn btn-success fs-4 '\r\n                            type='button'\r\n                            onClick={handleNewItem}\r\n                            >\r\n                            <i className=\"bi bi-plus-lg text-light \"></i>\r\n                            \r\n                    </button>\r\n        </div>\r\n    )\r\n}\r\n","import Modal from 'react-modal';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { eventStartUpdateListBudge } from '../../action/listEvents';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      borderRadius: '1rem',\r\n      boxShadow: '1rem',\r\n    },\r\n  };\r\n\r\nModal.defaultStyles.overlay.backgroundColor = '#000000d5';\r\nModal.setAppElement('#root');\r\n  \r\nexport const ModalBudget = ({modalIsOpen, setIsOpen}) => {\r\n\r\n    const {activeList} = useSelector( state => state.shoppingListReducer);\r\n    const dispatch = useDispatch();\r\n    const [budgetValues, handleBudgetInputChange] = useForm({ Budget: activeList.presupuesto});\r\n    const { Budget} = budgetValues;\r\n\r\n    const handleSaveBudget = () => {\r\n\r\n        dispatch(eventStartUpdateListBudge(activeList, Budget));\r\n        setIsOpen(false);\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n        isOpen={modalIsOpen}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n        >\r\n            <div className=\"d-flex justify-content-end\">\r\n              <button\r\n                className='btn bi bi-x text-success fs-1'\r\n                onClick={() => {\r\n                  setIsOpen(false)\r\n                }}>    \r\n              </button>\r\n            </div>\r\n        \r\n            <div className=\"row g-3 d-flex justify-content-around  mb-3\">\r\n                  <div className=\"col-auto d-flex align-self-center fs-1\">\r\n                    <label htmlFor='Budget'>Budget</label>\r\n                  </div>\r\n                  <div className=\"col-auto \">\r\n                    <input    \r\n                          className=\"form-control fs-3\" \r\n                          id='Budget'\r\n                          name='Budget' \r\n                          onChange={handleBudgetInputChange}\r\n                          placeholder='$'\r\n                          type='text'\r\n                          value={Budget}\r\n  \r\n                          />\r\n                  </div>\r\n            </div>\r\n  \r\n            <div className=\"footer d-flex justify-content-center\">\r\n                <button className='btn btn-success fs-1'\r\n                onClick={handleSaveBudget}\r\n                id=\"cancelBtn\">\r\n                Save  \r\n                </button>\r\n            </div>\r\n      </Modal>\r\n\r\n    )}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Swal from 'sweetalert2';\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router';\r\nimport { InputsAddItem } from './InputsAddItem';\r\nimport { ListProducts } from './ListProducts';\r\nimport { ModalBudget } from './ModalBudget';\r\n\r\nexport const UseList = () => {\r\n\r\n    let totalCurrent = () => { return 0};\r\n    const {title, productos , presupuesto:budget } = useSelector( state => state.shoppingListReducer.activeList );\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [remaining, setremaining] = useState(budget);\r\n    const [total, settotal] = useState(0);\r\n    const {push} = useHistory()\r\n    const Budget = parseFloat(budget).toFixed(2)\r\n\r\n\r\n    const handleBack = () => {\r\n        push('./list')\r\n    }\r\n\r\n    useEffect(() => {\r\n        (budget === 0) && setIsOpen(true);\r\n    }, [budget])\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        let remainingBudget = () => { return budget};\r\n        settotal(totalCurrent());\r\n\r\n        remainingBudget =  () => {\r\n            const rest = (budget - totalCurrent() ).toFixed(2)\r\n            setremaining(rest);\r\n        }\r\n\r\n        remainingBudget()\r\n\r\n    }, [ settotal, productos, budget]);\r\n\r\n\r\n    useEffect(() => {\r\n        const handleBudgetAlert = () => {\r\n  \r\n            if ( (remaining > 0 && remaining < (budget / 10))) { \r\n                Swal.fire({\r\n                    title: 'your budget is running out',\r\n                    icon: 'warning'\r\n                })\r\n            }\r\n     \r\n            if ( budget !== 0 && remaining < 0) {\r\n                Swal.fire({\r\n                    title: 'your budget ran out',\r\n                    icon: 'warning'\r\n                })\r\n            }\r\n        }\r\n\r\n        handleBudgetAlert();\r\n    }, [budget, remaining]);\r\n\r\n        totalCurrent = () => {\r\n\r\n            const prices = productos.map( product => {     \r\n                const itbms = product.precio * product.impuesto;\r\n                const price = parseFloat(product.precio) + parseFloat(itbms);\r\n                const totalPrice = price * product.cantidad;\r\n                return parseFloat(totalPrice);      \r\n            } )       \r\n            const  totalCurrent =  prices.reduce( (accountant  , total ) => {\r\n                return accountant + total ;\r\n            }, 0)\r\n\r\n                return totalCurrent.toFixed(2);\r\n            }\r\n\r\n\r\n    const handleBudget = ( ) => {\r\n        setIsOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n       \r\n            <div className='list-check-container  container-vh-85 text-center p-0  '> \r\n                \r\n                <div className='bg-success text-white m-0 p-2 title-h'>\r\n                    <i className=\"bi bi-arrow-left-square float-start fs-2\"\r\n                       onClick={handleBack}\r\n                    ></i>    \r\n                    <h2 className='d-inline '>{title} </h2>\r\n                </div>\r\n                \r\n                <div className='list-h'>\r\n                    <ListProducts />\r\n                </div>\r\n\r\n                <div className='add-h'>\r\n                    <InputsAddItem />\r\n                </div>\r\n                    \r\n                <div className='bg-success text-white text-start p-2 footer-h '>\r\n                    <div className='w-50'>\r\n                        <p className='m-0'>\r\n                            Budget :    <i className=\"bi bi-pencil-square fs-3 text-warning pt-2  pl-2 float-center\" \r\n                                            onClick={handleBudget}></i>\r\n                        <span className='fw-bold text-warning  float-end'> {'$' + Budget} </span></p>\r\n                        <p className='m-0'>Remaining budget:  <span className='fw-bold text-danger float-end'> { '$' +  remaining}</span></p> \r\n\r\n                        <p className='m-0'>Current total: <span className='fw-bold text-warning float-end'> { '$' + total } </span></p>\r\n                    </div>\r\n                </div>\r\n\r\n                <ModalBudget \r\n                modalIsOpen={modalIsOpen} \r\n                setIsOpen={setIsOpen}\r\n                />\r\n\r\n            </div>    \r\n    )\r\n\r\n    }\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { eventStartUpdateList} from '../../action/listEvents';\r\nimport { HandleFormProducts } from './HandleFormProducts';\r\n\r\nexport const UpdateList = () => {\r\n\r\n    const {activeList} = useSelector( state => state.shoppingListReducer);\r\n    const dispatch = useDispatch();\r\n    const { push } = useHistory()\r\n    \r\n    \r\n    // useEffect(() => {\r\n        \r\n        \r\n        \r\n    // },[])\r\n    \r\n    // const  Getproductos = dispatch(eventStartGetProducts(activeList ));\r\n\r\n    const { nombre: activeTitle, productos } = activeList;\r\n//  console.log(Getproductos);\r\n    \r\n\r\n    const handleSubmit = (activeList, title, products) => {\r\n        dispatch(eventStartUpdateList(activeList, title, products));\r\n        push(\"/list\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <HandleFormProducts \r\n                handleSubmit={handleSubmit}\r\n                activeProducts={productos}\r\n                activeTitle={activeTitle}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Switch,\r\n    Redirect,\r\n    Route\r\n  } from \"react-router-dom\";\r\nimport { Lists } from '../components/list/Lists';\r\nimport { NewList } from '../components/list/NewList';\r\nimport { UseList } from '../components/list/UseList';\r\nimport { UpdateList } from '../components/list/UpdateList';\r\n\r\nexport const ListRouter = () => {\r\n    \r\n\r\n    return(\r\n\r\n     \r\n        <div >\r\n            <Switch>\r\n                <Route \r\n                    exact\r\n                    path='/list'\r\n                    component={Lists}\r\n                />\r\n\r\n                <Route \r\n                    path='/list/newList'\r\n                    component={NewList}\r\n                />\r\n\r\n                <Route \r\n                    path='/list/useList'\r\n                    component={UseList}\r\n                />\r\n\r\n                <Route \r\n                    path='/list/updateList'\r\n                    component={UpdateList}\r\n                />\r\n            \r\n                <Redirect to='/list' />\r\n\r\n            </Switch>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const CreateNewList = () => {\r\n\r\n\r\n\r\n    return (\r\n        <Link className='btn btn-success fab fs-1 '\r\n        type=\"button\"  to=\"/list/newList\"\r\n        >\r\n            <i className=\"bi bi-plus-lg \"></i>\r\n        </Link>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogout } from '../../action/auth';\r\n// import { useGoogleLogout } from 'react-google-login'\r\n\r\nexport const Navbar = () => {\r\n  \r\n\r\n    // const onLogoutSuccess = () => {\r\n    //     console.log('logout');\r\n\r\n    //   };\r\n    //   const onFailure = () => {\r\n    //     console.log('logout fail');\r\n    //   };\r\n\r\n    //   const { signOut } = useGoogleLogout({\r\n    //     clientId: '153363051251-ns1m9qcf2e3qrm2j0ho9ipcq18ta6eah.apps.googleusercontent.com',\r\n    //     onLogoutSuccess: onLogoutSuccess,\r\n    //     onFailure: onFailure,\r\n    //   });\r\n\r\n \r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        // signOut()\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    \r\n \r\n\r\n    return (\r\n        \r\n        <div className='navbar navbar-light bg-success '>\r\n            \r\n            <span className='navbar-brand fs-2 '>\r\n             \r\n            </span>\r\n\r\n            <span className='font-brand navbar-brand text-center  text-light'>\r\n                Shopping List\r\n            </span>\r\n\r\n           \r\n                <i className=\"bi bi-power btn-logout mr-3\" \r\n                    onClick={handleLogout}\r\n                    type=\"button\"\r\n                    ></i>\r\n\r\n          \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { ListRouter } from '../../routers/ListRouter';\r\nimport { CreateNewList } from '../ui/CreateNewList';\r\nimport { Navbar } from '../ui/Navbar';\r\n\r\nexport const ShoppingListScreen = ({history}) => {\r\n\r\n\r\n    \r\n    return (\r\n        <div className=\"list-container\">\r\n            <div className=\"transparencia\">\r\n                <Navbar />\r\n                <div className=\"list-router-container\">\r\n                    <ListRouter/>\r\n                </div>\r\n\r\n                {\r\n                    (history.location.pathname === \"/list\")\r\n                    &&(<CreateNewList />)\r\n                }\r\n\r\n            </div>\r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","\r\n\r\n\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../action/auth';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { ShoppingListScreen } from '../components/list/ShoppingListScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n            dispatch( startChecking());\r\n    }, [dispatch])\r\n\r\n\r\n\r\n    if(checking) {\r\n        return <h5>Espere...</h5>\r\n    }\r\n\r\n    return (\r\n\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        path='/auth'\r\n                        component={LoginScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        path='/'\r\n                        component={ShoppingListScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n\r\n                    <Redirect to='/auth' />\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n  \r\n}\r\n\r\nexport const authReducer = ( state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        \r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n            \r\n          \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    lists: [],\r\n    activeList: {}\r\n}\r\n\r\n\r\nexport const shoppingListReducer = ( state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n          case types.eventNewList:\r\n            return {\r\n                ...state,\r\n                lists: [ ...state.lists, action.payload],\r\n                activeList:  {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case  types.eventGetList:\r\n            return {\r\n                ...state,\r\n                lists: [\r\n                    ...action.payload\r\n                ]\r\n            }\r\n\r\n        case  types.eventDeleteList:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.filter( list => list._id !== action.payload.id)\r\n            }\r\n\r\n        case types.eventUpdateList:\r\n            return {\r\n                \r\n                ...state, \r\n                lists: state.lists.map( \r\n                    list => list._id === action.payload.id\r\n                        ? action.payload.list\r\n                        : list\r\n                ),\r\n                activeList: action.payload.list\r\n\r\n            }\r\n\r\n        case types.eventNewActiveList:\r\n            return {\r\n                ...state,\r\n                activeList:  {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        \r\n        case types.eventUpdateListBudge:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(\r\n                    list => list._id === action.payload.id\r\n                        ? action.payload.list\r\n                        : list\r\n                ),\r\n                activeList: action.payload.list\r\n            }\r\n\r\n\r\n        case types.eventNewProduct:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map( \r\n                    list => list._id === action.payload.activeList._id\r\n                            ?  { ...list, productos : [...list.productos, action.payload.producto]}\r\n                            : list\r\n                ),\r\n                activeList: {...action.payload.activeList,\r\n                    productos: [...action.payload.activeList.productos, action.payload.producto] \r\n                }\r\n            }\r\n\r\n        case types.eventGetProducts:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map( \r\n                    list => list._id === action.payload.id\r\n                        ? action.payload.list\r\n                        : list\r\n                ),\r\n                activeList: {...action.payload.list}\r\n            }\r\n\r\n        case types.eventDeleteProduct:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map( \r\n                    list => list._id === action.payload.id\r\n                        ? action.payload.list\r\n                        : list\r\n                ),\r\n                activeList: {...action.payload.list}\r\n            }\r\n\r\n        case types.eventNewActiveProduct:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(\r\n                    list => list._id === action.payload.id\r\n                        ? action.payload.list\r\n                        : list\r\n                \r\n                ),\r\n\r\n                activeList: {...action.payload.list}\r\n            }\r\n\r\n        case types.eventUpdateProductPrice:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map( \r\n                    list => list._id === action.payload.id\r\n                        ? action.payload.list\r\n                        : list\r\n                ),\r\n                activeList: action.payload.list\r\n            }\r\n\r\n       case types.eventCheckProduct:\r\n           return {\r\n                ...state,\r\n                lists: state.lists.map( \r\n                    list => list._id === action.payload.id\r\n                        ? action.payload.list\r\n                        : list\r\n                ),\r\n                activeList: action.payload.list\r\n           }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport {authReducer} from './authReducer';\r\nimport { shoppingListReducer } from \"./shoppingListReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    shoppingListReducer: shoppingListReducer\r\n})\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk)\r\n    )\r\n)\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport {AppRouter} from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const ShoppingList = () => {\r\n    return (\r\n        <Provider store={store}>\r\n        <AppRouter />\r\n        </ Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ShoppingList} from './ShoppingList';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles/styles.scss';\r\n\r\n\r\nReactDOM.render(\r\n    <ShoppingList />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}